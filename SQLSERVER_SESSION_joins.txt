JOINS

use newdb;

select * from sys.tables;

select * from emp;

select * from dept;

When we required information from more than one table in the database we use joins

Purpose of joins is to retrieving data spread across the tables

select * from emp,dept;

-When all rows of table1 is joined to all rows of table2

-When join condition is omitted /invalid

then cartesian product will be formed

To avoid cartesian product we must include valid join condition in"where"clause

Actually joins performed by "where"clause itself

select columnlist
from table1,table2,..
where table1.columnname = table2.columnname;

To join n number of tables together we must include atleast n-1 join conditions

select columnlist
from table1,table2,table3,..
where table1.columnname = table2.columnname and table2.columnname = table3.columnname;

Types of joins :-

Simple join
	Equi join
	Non-equi join

Self join

Outer join
	Left outer join
	Right outer join
	Full outer join

Equi join :

Equi join is also called as INNER JOIN

Equi join performed on equalities only

When tables having common column ,foreign key then we write equi join to retrieving data spread across the tables

EMP		DEPT

empno		deptno
ename		dname
job		loc
sal
comm
deptno

EMP.DEPTNO = DEPT.DEPTNO

VENDOR_MASTER			ORDER_MASTER		ORDER_DETAIL

vencode				orderno			orderno
venname				odate			qty_ord
venaddress			del_date		qty_deld
venmobile			o_status		itemcode
ventype				vencode

select * from vendor_master,order_master,order_detail
where vendor_master.vencode = order_master.vencode and order_master.orderno=order_detail.orderno;

select * from vendor_master inner join order_master on vendor_master.vencode = order_master.vencode inner join order_detail on order_master.orderno = order_detail.orderno;

select venname,venaddress,venmobile,odate,del_date,o_status,qty_ord,qty_deld
from vendor_master inner join order_master on vendor_master.vencode = order_master.vencode inner join order_detail on order_master.orderno = order_detail.orderno;

select * from emp,dept where emp.deptno= dept.deptno;

select empno,ename,job,sal,dname,loc
from emp,dept
where emp.deptno = dept.deptno;

select empno,ename,job,sal,dname,loc
from emp inner join dept on emp.deptno = dept.deptno;

select empno,ename,job,sal,deptno,dname,loc
from emp inner join dept on emp.deptno= dept.deptno;

Msg 209, Level 16, State 1, Line 18
Ambiguous column name 'deptno'.

If the same columnname appears in two tables then we prefix the columnname with either tablename /tablealias to prevent column ambiguity

select empno,ename,job,sal,emp.deptno,dept.deptno,dname,loc
from emp inner join dept on emp.deptno = dept.deptno;

select empno,ename,job,sal,e.deptno,d.deptno,dname,loc
from emp e inner join dept d on e.deptno = d.deptno;

select e.empno,e.ename,e.job,e.sal,e.deptno,d.deptno,d.dname,d.loc
from emp e inner join dept d on e.deptno =d.deptno;

select d.dname,min(e.sal) "Min Salary",max(e.sal) "Max Salary"
from emp e inner join dept d on e.deptno =d.deptno
group by d.dname;

Here e and d are tablealiases for emp,dept tables

Tablealias is an alternate name for an existing table

Tablealias act like a table

====================================================================
select odate,del_date,itemcode,qty_ord,qty_deld
from order_master,order_detail
where order_master.orderno = order_detail.orderno;

==========================================================================

Products :- 

Prodid
prodname
prod_category
MFG_Date
EXP_Date
Prodcost

Vendors :-

vencode
venname
qty_ord
qty_deld
odate
del_date
prodid

ITEMFILE

Itemcode
Itemdesc
P_category
Qty_hand
Max_level
Re_level
Itemrate

ORDER_DETAIL

Orderno
Qty_ord
Qty_deld
Itemcode

select itemdesc,max_level,qty_ord,qty_deld
from itemfile,order_detail
where itemfile.max_level < order_detail.qty_ord and itemfile.itemcode = order_detail.itemcode;

During a lean period XYZ ENTERPRISES decided to maintain a full level of the stock of spares in the eventually of a sudden spurt in orders. Query to find the items whose quantity at hand is less than the maximum level

select a.itemcode,a.itemdesc,a.qty_hand,b.max_level
from itemfile a,itemfile b
where a.qty_hand < b.max_level and a.p_category='spares' 
and a.itemcode =b.itemcode;

=============================================================

NON-EQUI  join :-

Non-equi join performed by all relational operators like < > <= >= <>  other than(=)

For all different columns in a table then we write non-equi join to retrieving data spread across the tables

select * from emp;

EMPNO	ENAME	JOB		MGR	HIREDATE	SAL	COMM	DEPTNO
-----	-----	-------		-----	----------	-------	----	------
7369	SMITH	CLERK		7902	1980-12-17	800.00	NULL	20
7499	ALLEN	SALESMAN	7698	1981-02-20	1600.00	300.00	30
7521	WARD	SALESMAN	7698	1981-02-22	1250.00	500.00	30
7566	JONES	MANAGER		7839	1981-04-02	2975.00	NULL	20
7654	MARTIN	SALESMAN	7698	1981-09-28	1250.00	1400.00	30
7698	BLAKE	MANAGER		7839	1981-05-01	2850.00	NULL	30
7782	CLARK	MANAGER		7839	1981-06-09	2450.00	NULL	10
7788	SCOTT	ANALYST		7566	1982-12-09	3000.00	NULL	20
7839	KING	PRESIDENT	NULL	1981-11-17	5000.00	NULL	10
7844	TURNER	SALESMAN	7698	1981-09-08	1500.00	0.00	30
7876	ADAMS	CLERK		7788	1983-01-12	1100.00	NULL	20
7900	JAMES	CLERK		7698	1981-12-03	950.00	NULL	30
7902	FORD	ANALYST		7566	1981-12-03	3000.00	NULL	20
7934	MILLER	CLERK		7782	1982-01-23	1300.00	NULL	10

select * from salgrade;

GRADE	LOSAL	HISAL
-----	-----	-----
1	700	1200
2	1201	1400
3	1401	2000
4	2001	3000
5	3001	9999

select * from emp,salgrade
where sal >=losal and sal <= hisal;

select empno,ename,job,sal,grade
from emp,salgrade
where sal >=losal and sal <=hisal;

select empno,ename,job,sal,grade
from emp,salgrade
where emp.sal >=salgrade.losal and emp.sal <=salgrade.hisal;

select e.empno,e.ename,e.job,e.sal,s.grade
from emp e,salgrade s
where e.sal between s.losal and s.hisal;

Here e and s are tablealiases for emp,salgrade tables

Tablealias act like a table

=====================================================================

SELF JOIN :-

Joining of a table to itself is known as self join

It can compare each row of the table to itself and also with other rows in the same table

select * from emp;

EMPNO	ENAME	JOB		MGR	HIREDATE	SAL	COMM	DEPTNO
-----	-----	-------		-----	----------	-------	----	------
7369	SMITH	CLERK		7902	1980-12-17	800.00	NULL	20
7499	ALLEN	SALESMAN	7698	1981-02-20	1600.00	300.00	30
7521	WARD	SALESMAN	7698	1981-02-22	1250.00	500.00	30
7566	JONES	MANAGER		7839	1981-04-02	2975.00	NULL	20
7654	MARTIN	SALESMAN	7698	1981-09-28	1250.00	1400.00	30
7698	BLAKE	MANAGER		7839	1981-05-01	2850.00	NULL	30
7782	CLARK	MANAGER		7839	1981-06-09	2450.00	NULL	10
7788	SCOTT	ANALYST		7566	1982-12-09	3000.00	NULL	20
7839	KING	PRESIDENT	NULL	1981-11-17	5000.00	NULL	10
7844	TURNER	SALESMAN	7698	1981-09-08	1500.00	0.00	30
7876	ADAMS	CLERK		7788	1983-01-12	1100.00	NULL	20
7900	JAMES	CLERK		7698	1981-12-03	950.00	NULL	30
7902	FORD	ANALYST		7566	1981-12-03	3000.00	NULL	20
7934	MILLER	CLERK		7782	1982-01-23	1300.00	NULL	10

select e.ename,m.ename
from emp e,emp m 
where e.mgr = m.empno;

select e.ename "Employee",m.ename "Manager"
from emp e,emp m 
where e.mgr =m.empno;

select e.ename "Employee",e.hiredate,m.ename "Manager",m.hiredate
from emp e,emp m 
where e.mgr = m.empno;

Here e and m are tablealiases for emp table

Tablealias act like a table

=================================================================

OUTER JOIN :-

Outer join is an extension of result of simple join

EMP		DEPT

DEPTNO		DEPTNO

10		10

20		20

30		30

		40

50

EMP.DEPTNO = DEPT.DEPTNO

select empno,ename,job,sal,emp.deptno,dept.deptno,dname,loc
from emp left outer join dept on emp.deptno=dept.deptno;

7369	SMITH	CLERK		800.00	20	20	RESEARCH	DALLAS
7499	ALLEN	SALESMAN	1600.00	30	30	SALES		CHICAGO
7521	WARD	SALESMAN	1250.00	30	30	SALES		CHICAGO
7566	JONES	MANAGER		2975.00	20	20	RESEARCH	DALLAS
7654	MARTIN	SALESMAN	1250.00	30	30	SALES		CHICAGO
7698	BLAKE	MANAGER		2850.00	30	30	SALES		CHICAGO
7782	CLARK	MANAGER		2450.00	10	10	ACCOUNTING	NEW YORK
7788	SCOTT	ANALYST		3000.00	20	20	RESEARCH	DALLAS
7839	KING	PRESIDENT	5000.00	10	10	ACCOUNTING	NEW YORK
7844	TURNER	SALESMAN	1500.00	30	30	SALES		CHICAGO
7876	ADAMS	CLERK		1100.00	20	20	RESEARCH	DALLAS
7900	JAMES	CLERK		950.00	30	30	SALES		CHICAGO
7902	FORD	ANALYST		3000.00	20	20	RESEARCH	DALLAS
7934	MILLER	CLERK		1300.00	10	10	ACCOUNTING	NEW YORK
100	NULL	AA		NULL	50	NULL	NULL		NULL

select empno,ename,job,sal,emp.deptno,dept.deptno,dname,loc
from emp right outer join dept on emp.deptno = dept.deptno;

7782	CLARK	MANAGER		2450.00	10	10	ACCOUNTING	NEW YORK
7839	KING	PRESIDENT	5000.00	10	10	ACCOUNTING	NEW YORK
7934	MILLER	CLERK		1300.00	10	10	ACCOUNTING	NEW YORK
7369	SMITH	CLERK		800.00	20	20	RESEARCH	DALLAS
7566	JONES	MANAGER		2975.00	20	20	RESEARCH	DALLAS
7788	SCOTT	ANALYST		3000.00	20	20	RESEARCH	DALLAS
7876	ADAMS	CLERK		1100.00	20	20	RESEARCH	DALLAS
7902	FORD	ANALYST		3000.00	20	20	RESEARCH	DALLAS
7499	ALLEN	SALESMAN	1600.00	30	30	SALES		CHICAGO
7521	WARD	SALESMAN	1250.00	30	30	SALES		CHICAGO
7654	MARTIN	SALESMAN	1250.00	30	30	SALES		CHICAGO
7698	BLAKE	MANAGER		2850.00	30	30	SALES		CHICAGO
7844	TURNER	SALESMAN	1500.00	30	30	SALES		CHICAGO
7900	JAMES	CLERK		950.00	30	30	SALES		CHICAGO
NULL	NULL	NULL		NULL	NULL	40	OPERATIONS	BOSTON

select empno,ename,job,sal,emp.deptno,dept.deptno,dname,loc
from emp full outer join dept on emp.deptno= dept.deptno;

7369	SMITH	CLERK		800.00	20	20	RESEARCH	DALLAS
7499	ALLEN	SALESMAN	1600.00	30	30	SALES		CHICAGO
7521	WARD	SALESMAN	1250.00	30	30	SALES		CHICAGO
7566	JONES	MANAGER		2975.00	20	20	RESEARCH	DALLAS
7654	MARTIN	SALESMAN	1250.00	30	30	SALES		CHICAGO
7698	BLAKE	MANAGER		2850.00	30	30	SALES		CHICAGO
7782	CLARK	MANAGER		2450.00	10	10	ACCOUNTING	NEW YORK
7788	SCOTT	ANALYST		3000.00	20	20	RESEARCH	DALLAS
7839	KING	PRESIDENT	5000.00	10	10	ACCOUNTING	NEW YORK
7844	TURNER	SALESMAN	1500.00	30	30	SALES		CHICAGO
7876	ADAMS	CLERK		1100.00	20	20	RESEARCH	DALLAS
7900	JAMES	CLERK		950.00	30	30	SALES		CHICAGO
7902	FORD	ANALYST		3000.00	20	20	RESEARCH	DALLAS
7934	MILLER	CLERK		1300.00	10	10	ACCOUNTING	NEW YORK
100	NULL	AA		NULL	50	NULL	NULL		NULL
NULL	NULL	NULL		NULL	NULL	40	OPERATIONS	BOSTON

========================================================================

Additional join methods is SETOPERATORS

using SETOPERATORS, we can have combined information from two queries

select columnlist from table1
setoperator
select columnlist from table2;

UNION - retrieving combined information from two queries with distinct values

select deptno from emp
union
select deptno from dept;

UNION ALL - retrieving combined information from two queries including all duplicates

select deptno from emp
union all
select deptno from dept;

INTERSECT - retrieving common information from two queries

select deptno from emp
intersect
select deptno from dept;

================================================================

Exercise :-

1. Write a query to display the name,department number and dname for all employees

select ename,emp.deptno,dname 
from emp,dept where emp.deptno = dept.deptno;

2. Create a unique listing of all jobs that are in deptno 30. Include the loc of deptno 30 in the output

3. Write a query to display the ename,dname and loc of all employees who earn a commission

4. Display the ename and dname for all employees who have an A in their name

5. Write a query to display the name,job,deptno and dname for all employees who work in DALLAS

6. Display the ename,empno along with their manager's name and manager number.

7. To display all employees including King, who has no manager

8. Create a query that will display the ename,deptno and all the employees that work in the same department as a given employee.

9. Show the structure of SALGRADE table, Create a query that will display the name,job,dname,sal, and grade for all employees

10. Create a query to display the name and hiredate of any employee hired after employee Blake.

11. Display all employee's names and hiredates along with their manager's name and hiredate for all employees who were hired before their managers.

===================================================================================

1. Display the name of each employee with his department name.

SELECT ename, dname FROM emp INNER JOIN dept ON emp.deptno = dept.deptno;

2. Display a list of all departments with the employees in each department.

SELECT dname, ename FROM dept LEFT OUTER JOIN emp ON dept.deptno = emp.deptno;

3. Display all the departments with the manager for that department.

SELECT dname, ename FROM emp INNER JOIN dept ON emp.deptno = dept.deptno
WHERE job = 'MANAGER';

4. Display the names of each employee with the name of his/her boss.

SELECT s.ename, b.ename FROM emp s INNER JOIN emp b ON s.mgr = b.empno;

5. Display the names of each employee with the name of his/her boss with a blank for the boss of thepresident.

SELECT s.ename, b.ename FROM emp s LEFT OUTER JOIN emp b ON s.mgr = b.empno;

6. Display the employee number and name of each employee who manages other employees with the number of people he or she manages.

SELECT a.mgr, b.ename, count(a.mgr) FROM emp a INNER JOIN emp b
ON a.mgr = b.empno WHERE a.mgr IS NOT NULL GROUP BY a.mgr, b.ename;

7. Repeat the display for the last question, but this time display the rows in descending order of the number of employees managed.

SELECT a.mgr, b.ename, count(a.mgr) FROM emp a INNER JOIN emp b
ON a.mgr = b.empno WHERE a.mgr IS NOT NULL GROUP BY a.mgr, b.ename
ORDER BY count(a.mgr) DESC;

=======================================================================